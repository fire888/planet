!function(){"use strict";var e=void 0,n={sceneBack:null,waterNormals:null,continents:null},t=function(t){e=new THREE.TextureLoader,new Promise(function(t){n.sceneBack=e.load("assets/background_map.jpg",function(){t()})}).then(function(){return new Promise(function(t){n.waterNormals=e.load("assets/Voda_normali.jpg",function(){n.waterNormals.wrapS=n.waterNormals.wrapT=THREE.RepeatWrapping,n.waterNormals.repeat.set(5,5),t()})})}).then(function(){return new Promise(function(t){n.continents=e.load("assets/contour.jpg",function(){t()})})}).then(function(){e=null,t()})},i=void 0,o=void 0,a=void 0,r=function(){i=new THREE.Scene,i.background=n.sceneBack,o=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,3.5,15e3),o.position.set(-800,0,1800);var e=new THREE.PointLight(16777215,2);e.position.set(1e3,1e3,1e3),i.add(e);var t=new THREE.AmbientLight(16777215,.2);i.add(t),a=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webGL")}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight)},l=function e(){T(),a.render(i,o),requestAnimationFrame(e)},d=function(){window.addEventListener("resize",s,!1)},s=function(){a.setSize(window.innerWidth,window.innerHeight),o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix()},u=function(){document.getElementById("webGL").className="show"},c=function(){document.getElementById("preloader").className="hide"},f=function(){window.addEventListener("wheel",m,!1),window.onscroll=function(){m()}},m=function e(){if(!N()){y();document.getElementById("preloader").className="hidden",setTimeout(function(){document.getElementById("slogan").className="show"},500),window.removeEventListener("wheel",e,!1)}},w=void 0,h=void 0,v=void 0,g=function(){w=new THREE.Group,h=E(),w.add(h),v=p(),w.add(v),i.add(w)},E=function(){return new THREE.Mesh(new THREE.SphereGeometry(600,40,40),new THREE.MeshPhongMaterial({map:n.waterNormals,normalMap:n.waterNormals,shininess:0,transparent:!0,opacity:.94,color:2042436}))},p=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(S));return e.rotation.z=-.5,e.rotation.x=-.5,e.material.transparent=!0,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e.material.uniforms.tDiffuse.value=n.continents,e},H=.002,R="left",T=function(){w&&(H>.005&&"left"==R&&(R="right"),H<-.005&&"right"==R&&(R="left"),"left"==R&&(H+=1e-4),"right"==R&&(H-=1e-4),"normal"==R&&(H<.02?(H+=5e-5,v.material.uniforms.light.value<1.35&&(v.material.uniforms.light.value+=.012,h.material.opacity-=5e-4,h.material.needsUpdate=!0)):H=.02),w.rotation.y+=H,console.log(H))},y=function(){return R="normal"},N=function(){return"normal"==R||"normal"==R&&void 0};window.onload=function(){t(function(){r(),d(),g(),l(),u(),c(),f()})};var S={uniforms:{tDiffuse:{value:null},light:{value:.2}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision highp float;","#endif","uniform highp sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec4 cont = vec4( 0.7*light, 0.7*light, 1.0*light,  diff.x*light*1.3 );","vec4 ground = vec4( 0.01*light-0.5, 0.01*light-0.5, 0.6*light,  (1.0 - diff.y)*light*0.6 );","gl_FragColor = cont + ground;","}"].join("\n")}}();
