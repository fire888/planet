!function(){"use strict";var e=void 0,n={sceneBack:null,waterNormals:null,continents:null},t=function(t){e=new THREE.TextureLoader,new Promise(function(t){n.sceneBack=e.load("assets/background_map.jpg",function(){t()})}).then(function(){return new Promise(function(t){n.waterNormals=e.load("assets/Voda_normali.jpg",function(){n.waterNormals.wrapS=n.waterNormals.wrapT=THREE.RepeatWrapping,n.waterNormals.repeat.set(5,5),t()})})}).then(function(){return new Promise(function(t){n.continents=e.load("assets/contour.jpg",function(){t()})})}).then(function(){e=null,t()})},i=void 0,o=void 0,a=void 0,r=function(){i=new THREE.Scene,i.background=n.sceneBack,o=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,3.5,15e3),o.position.set(-800,0,1800);var e=new THREE.PointLight(16777215,2);e.position.set(1e3,1e3,1e3),i.add(e);var t=new THREE.AmbientLight(16777215,.2);i.add(t),a=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webGL")}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight)},l=function e(){T(),a.render(i,o),requestAnimationFrame(e)},d=function(){window.addEventListener("resize",s,!1)},s=function(){a.setSize(window.innerWidth,window.innerHeight),o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix()},u=function(){document.getElementById("webGL").className="show"},c=function(){document.getElementById("preloader").className="hide"},f=function(){window.addEventListener("wheel",v,!1),window.onscroll=function(){v()}},v=function e(){if(!x()){y();document.getElementById("preloader").className="hidden",setTimeout(function(){document.getElementById("slogan").className="show"},500),window.removeEventListener("wheel",e,!1)}},m=void 0,w=void 0,h=void 0,p=function(){m=new THREE.Group,w=g(),m.add(w),h=E(),m.add(h),i.add(m)},g=function(){return new THREE.Mesh(new THREE.SphereGeometry(600,40,40),new THREE.MeshPhongMaterial({map:n.waterNormals,normalMap:n.waterNormals,shininess:0,transparent:!0,opacity:.94,color:2042436}))},E=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(N));return e.rotation.z=-.5,e.rotation.x=-.5,e.material.transparent=!0,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e.material.uniforms.tDiffuse.value=n.continents,e},H=.002,R="left",T=function(){m&&(H>.005&&"left"==R&&(R="right"),H<-.005&&"right"==R&&(R="left"),"left"==R&&(H+=1e-4),"right"==R&&(H-=1e-4),"normal"==R&&(H<.02?(H+=5e-5,h.material.uniforms.light.value<1.35&&(h.material.uniforms.light.value+=.012,w.material.opacity-=5e-4,w.material.needsUpdate=!0)):H=.02),m.rotation.y+=H)},y=function(){return R="normal"},x=function(){return"normal"==R||"normal"==R&&void 0};window.onload=function(){t(function(){r(),d(),p(),l(),u(),c(),f()})};var N={uniforms:{tDiffuse:{value:null},light:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","#endif","uniform sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","float point (in vec2 uv, in vec2 center, in float radius) {","float len = length(center - uv);","return float(1. - smoothstep(radius, radius + .04, len));","}","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec2 tileuv = vec2(uv.x, uv.y*0.8) * 80.;","float radius = .12;","vec2 center = floor( tileuv ) + vec2( 0.5, 0.5 );","float point = point( tileuv, center, radius );","vec4 points = vec4( 0.3 * light - 0.2, 0.3 * light - 0.2, 0.7 * light,  (1.01 - diff.y) * point );","vec4 contur = vec4( 0.2*light, 0.2*light, 0.8*light,  diff.x );","vec4 continents = vec4( .1, .1, .2, (1.5 - diff.y) * (1.0 - points.z) * 0.2 );","gl_FragColor = contur + continents + points;","}"].join("\n")}}();
