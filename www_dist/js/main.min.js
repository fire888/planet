!function(){"use strict";var e={uniforms:{tDiffuse:{value:null},light:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","#endif","uniform sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","float point (in vec2 uv, in vec2 center, in float radius) {","float len = length(center - uv);","return float(1. - smoothstep(radius, radius + .6, len));","}","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec2 tileuv = vec2(uv.x, uv.y*0.8) * 180.;","float radius = .03;","vec2 center = floor( tileuv ) + vec2( 0.5, 0.5 );","float point = point( tileuv, center, radius );","vec4 points = vec4( 1.5 * light - 0.2, 1.5 * light - 0.2, 1.8 * light,  (1.01 - diff.y) * point );","vec4 contur = vec4( 1.2*light, 1.2*light, 1.8*light,  diff.x );","vec4 continents = vec4( .1, .1, .2, (1.5 - diff.y) * (1.0 - points.z) * 0.01 );","gl_FragColor = contur + continents + points;","}"].join("\n")},n={uniforms:{viewVector:{value:new THREE.Vector3(-800,-200,8200)},light:{value:.01},glowColor:{value:new THREE.Vector3(.5,.5,.9)}},vertexShader:["uniform vec3 viewVector;","uniform float light;","varying float intensity;","void main() {","vec3 vNormal = normalize( normalMatrix * normal );","vec3 vNormel = normalize( normalMatrix * viewVector );","intensity = pow( abs(light) - dot(vNormal, vNormel), 2.9 );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 glowColor;","varying float intensity;","void main() {","vec3 glow = glowColor * intensity;","gl_FragColor = vec4( glow, 1.0 );","}"].join("\n")},t={uniforms:{light:{value:1}},vertexShader:["uniform float light;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float light;","void main() {","gl_FragColor = vec4( 0.8*light, 0.9*light, 1.3*light, 1.0 );","}"].join("\n")},i=void 0,o=function(){var e=document.getElementById("app-webgl"),n=e.clientWidth||e.offsetWidth;return n>window.innerWidth&&(n=window.innerWidth),n},r=function(e){i=e,window.addEventListener("resize",function(){i(o())},!1)},a=void 0,u=function(e){a=e,document.addEventListener("wheel",l,!1),document.addEventListener("scroll",l,!1),document.addEventListener("touchstart",l,!1)},l=function(){a(),d(),setTimeout(function(){document.getElementById("slogan").className="show"},500)},d=function(){document.removeEventListener("wheel",l,!1),document.removeEventListener("scroll",l,!1),document.removeEventListener("touchstart",l,!1)},c=function(){document.getElementById("webgl").className="show"},s=function(){var e=document.getElementById("preloader");e.className="hide",setTimeout(function(){e.className="hidden"},1e3)};window.onload=function(){w(function(){var e=o();T(e),r(y),b(),W(),M(),c(),s(),u(f)})};var v="DARK",f=function(){return v="FLASH"},m=function(){"FLASH"==v&&z()&&ee()&&(v="LIGHT"),P(v),J(v)},g=void 0,h=void 0,E={textures:{sceneBack:null,waterNormals:null,continents:null},geoms:{corpus:null,diod:null}},w=function(e){g=new THREE.TextureLoader,h=new THREE.OBJLoader,new Promise(function(e){E.textures.sceneBack=g.load("assets/background_map.jpg",function(){e()})}).then(function(){return new Promise(function(e){E.textures.continents=g.load("assets/contour.jpg",function(){e()})})}).then(function(){return new Promise(function(e){h.load("assets/connector.obj",function(n){n.traverse(function(n){n instanceof THREE.Mesh==1&&("diod"==n.name&&(E.geoms.diod=n.geometry),"iron"==n.name&&(E.geoms.corpus=n.geometry),E.geoms.diod&&E.geoms.corpus&&e())})})})}).then(function(){g=null,h=null,e()})},p=void 0,R=void 0,H=void 0,T=function(e){H=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webgl")}),H.setPixelRatio(window.devicePixelRatio),H.setSize(e,.7*e),R=new THREE.PerspectiveCamera(20,e/(.7*e),3.5,15e3),R.position.set(-800,-200,8200);var n=new THREE.PointLight(16777215,2);n.position.set(1e3,1e3,1e3);var t=new THREE.AmbientLight(16777215,.2);p=new THREE.Scene,p.background=E.textures.sceneBack,p.add(n,t)},y=function(e){H.setSize(e,.7*e),R.aspect=e/(.7*e),R.updateProjectionMatrix()},M=function e(){m(),H.render(p,R),requestAnimationFrame(e)},x=void 0,S=void 0,L=void 0,b=function(){L=j(),S=A(),x=new THREE.Group,x.rotation.z=-.3,x.rotation.x=.5,p.add(x.add(S),L)},A=function(){var n=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(e));return n.material.transparent=!0,n.material.side=THREE.DoubleSide,n.material.depthWrite=!1,n.material.needsUpdate=!0,n.material.uniforms.tDiffuse.value=E.textures.continents,n},j=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(780,40,40),new THREE.ShaderMaterial(n));return e.material.transparent=!0,e.material.blending=THREE.AdditiveBlending,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e},B=.002,D="left",P=function(e){x&&("DARK"==e&&G(),"FLASH"==e&&V(),S.rotation.y+=B)},G=function(){S.rotation.y>.8&&"left"==D&&(D="right"),S.rotation.y<0&&"right"==D&&(D="left"),"left"==D&&Math.abs(B+3e-4)<.01&&(B+=3e-4),"right"==D&&Math.abs(B-3e-4)<.01&&(B-=3e-4)},V=function(){B<.01?B+=3e-4:B=.01,S.material.uniforms.light.value<1.35&&(S.material.uniforms.light.value+=.012),L.material.uniforms.light.value<.1&&(L.material.uniforms.light.value+=.0034)},z=function(){return.01==B},Y=[],F=[{dirY:6.08,dirZ:.8},{dirY:.2,dirZ:1.8},{dirY:3.24,dirZ:.8},{dirY:1.5,dirZ:.8},{dirY:1.9,dirZ:1.8},{dirY:3.7,dirZ:2}],N=void 0,Z=void 0,C=void 0,W=function(){Z=_(),C=U(),N=new THREE.Group,F.forEach(function(e){var n=k(),t=new THREE.Group;t.add(n),t.position.set(Math.sin(e.dirZ)*Math.sin(e.dirY)*795,795*Math.cos(e.dirZ),Math.sin(e.dirZ)*Math.cos(e.dirY)*795),t.lookAt(0,0,0);var i=I();n.add(i),Y.push({connector:t,plug:n,wire:i,dirY:e.dirY}),N.add(t)}),S.add(N)},_=function(){return new THREE.MeshPhongMaterial({color:789017,emissive:0,specular:12632256,shininess:100})},U=function(){return new THREE.ShaderMaterial(t)},k=function(){var e=new THREE.Mesh(E.geoms.corpus,Z),n=new THREE.Mesh(E.geoms.diod,C),t=new THREE.Group;return t.add(n,e),t},I=function(){var e=new THREE.QuadraticBezierCurve3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1e3),new THREE.Vector3(0,0,-3500)),n=new THREE.TubeBufferGeometry(e,10,25,8,!1);return new THREE.Mesh(n,Z)},K=function(){0!=Y.length&&(Y.forEach(function(e){p.remove(e.plug),p.remove(e.wire)}),p.remove(N),Y=[])},q=.005,Q="DARK",J=function(e){0!=Y.length&&("DARK"==e&&O(),"FLASH"==e&&("DARK"==Q&&(X(),Q="FLASH"),$()))},O=function(){Y.forEach(function(e){e.plug&&e.wire&&(e.wire.geometry.parameters.path.v2.x=5e3*Math.sin(S.rotation.y-.4),e.wire.geometry.dispose(),e.wire.geometry=new THREE.TubeBufferGeometry(e.wire.geometry.parameters.path,30,25,8,!1),e.wire.geometry.needsUpdate=!0)})},X=function(){S.getWorldQuaternion(N.quaternion),S.remove(N),p.add(N)},$=function(){C.uniforms.light.value-=.01,q+=.6,Y.forEach(function(e){e.plug.position.z-=q})},ee=function(){return 0==Y.length||(!Y[0].plug||Y[0].plug.position.z<-15e3&&(K(),!0))}}();
