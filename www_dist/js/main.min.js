!function(){"use strict";var e={uniforms:{tDiffuse:{value:null},light:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","#endif","uniform sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","float point (in vec2 uv, in vec2 center, in float radius) {","float len = length(center - uv);","return float(1. - smoothstep(radius, radius + .6, len));","}","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec2 tileuv = vec2(uv.x, uv.y*0.8) * 180.;","float radius = .03;","vec2 center = floor( tileuv ) + vec2( 0.5, 0.5 );","float point = point( tileuv, center, radius );","vec4 points = vec4( 1.5 * light - 0.2, 1.5 * light - 0.2, 1.8 * light,  (1.01 - diff.y) * point );","vec4 contur = vec4( 1.2*light, 1.2*light, 1.8*light,  diff.x );","vec4 continents = vec4( .1, .1, .2, (1.5 - diff.y) * (1.0 - points.z) * 0.01 );","gl_FragColor = contur + continents + points;","}"].join("\n")},n={uniforms:{viewVector:{value:new THREE.Vector3(-800,0,1800)},light:{value:0},glowColor:{value:new THREE.Vector3(.5,.5,.9)}},vertexShader:["uniform vec3 viewVector;","uniform float light;","varying float intensity;","void main() {","vec3 vNormal = normalize( normalMatrix * normal );","vec3 vNormel = normalize( normalMatrix * viewVector );","intensity = pow( light - dot(vNormal, vNormel), 2.9 );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 glowColor;","varying float intensity;","void main() {","vec3 glow = glowColor * intensity;","gl_FragColor = vec4( glow, 1.0 );","}"].join("\n")},i={uniforms:{light:{value:1}},vertexShader:["uniform float light;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float light;","void main() {","gl_FragColor = vec4( 0.7*light, 0.8*light, 1.0*light, 1.0 );","}"].join("\n")},t=void 0,o=function(e){t=e,window.addEventListener("resize",t,!1)},r=void 0,a=function(e){r=e,window.addEventListener("wheel",l,!1),window.addEventListener("scroll",l,!1)},l=function(){r(),s(),setTimeout(function(){document.getElementById("slogan").className="show"},500)},s=function(){window.removeEventListener("wheel",l,!1),window.removeEventListener("scroll",l,!1)},u=function(){document.getElementById("webGL").className="show"},d=function(){var e=document.getElementById("preloader");e.className="hide",setTimeout(function(){e.className="hidden"},1e3)};window.onload=function(){E(function(){R(),o(T),P(),z(),M(),u(),d(),a(v)})};var c="DARK",v=function(){return c="FLASH"},m=function(){"FLASH"==c&&b()&&K()&&(c="LIGHT"),G(c),U(c)},f=void 0,h=void 0,w={textures:{sceneBack:null,waterNormals:null,continents:null},geoms:{corpus:null,diod:null}},E=function(e){f=new THREE.TextureLoader,h=new THREE.OBJLoader,new Promise(function(e){w.textures.sceneBack=f.load("assets/background_map.jpg",function(){e()})}).then(function(){return new Promise(function(e){w.textures.waterNormals=f.load("assets/Voda_normali.jpg",function(n){n.wrapS=n.wrapT=THREE.RepeatWrapping,n.repeat.set(5,5),e()})})}).then(function(){return new Promise(function(e){w.textures.continents=f.load("assets/contour.jpg",function(){e()})})}).then(function(){return new Promise(function(e){h.load("assets/connector.obj",function(n){n.traverse(function(n){n instanceof THREE.Mesh==1&&("diod"==n.name&&(w.geoms.diod=n.geometry),"iron"==n.name&&(w.geoms.corpus=n.geometry),w.geoms.diod&&w.geoms.corpus&&e())})})})}).then(function(){f=null,h=null,e()})},g=void 0,p=void 0,H=void 0,R=function(){H=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webGL")}),H.setPixelRatio(window.devicePixelRatio),H.setSize(window.innerWidth,window.innerHeight),p=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,3.5,15e3),p.position.set(-800,0,1800);var e=new THREE.PointLight(16777215,2);e.position.set(1e3,1e3,1e3);var n=new THREE.AmbientLight(16777215,.2);g=new THREE.Scene,g.background=w.textures.sceneBack,g.add(e,n)},T=function(){H.setSize(window.innerWidth,window.innerHeight),p.aspect=window.innerWidth/window.innerHeight,p.updateProjectionMatrix()},M=function e(){m(),H.render(g,p),requestAnimationFrame(e)},x=void 0,y=void 0,S=void 0,L=void 0,P=function(){y=j(),S=B(),x=new THREE.Group,x.add(S,y),g.add(x),L=N(),g.add(L)},j=function(){return new THREE.Mesh(new THREE.SphereGeometry(600,40,40),new THREE.MeshPhongMaterial({map:w.textures.waterNormals,normalMap:w.textures.waterNormals,shininess:0,transparent:!0,opacity:.94,color:2042436}))},B=function(){var n=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(e));return n.rotation.z=-.5,n.rotation.x=-.5,n.material.transparent=!0,n.material.side=THREE.DoubleSide,n.material.depthWrite=!1,n.material.needsUpdate=!0,n.material.uniforms.tDiffuse.value=w.textures.continents,n},N=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(780,40,40),new THREE.ShaderMaterial(n));return e.material.transparent=!0,e.material.blending=THREE.AdditiveBlending,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e},A=.002,D="left",G=function(e){x&&("DARK"==e&&(A>.005&&"left"==D&&(D="right"),A<-.005&&"right"==D&&(D="left"),"left"==D&&(A+=1e-4),"right"==D&&(A-=1e-4)),"FLASH"==e&&(A<.02?A+=5e-5:A=.02,S.material.uniforms.light.value<1.35&&(S.material.uniforms.light.value+=.012,L.material.uniforms.light.value+=.0034)),x.rotation.y+=A)},b=function(){return.02==A},V=[],_=void 0,F=void 0,W=void 0,z=function(){F=C(),W=I(),_=new THREE.Mesh(new THREE.BoxGeometry(.5,.5,.5),new THREE.MeshBasicMaterial({color:65535})),g.add(_);for(var e=0;e<12;e++){var n=k(),i=Math.cos(e/12*Math.PI*2),t=Math.sin(e/12*Math.PI*2);n.position.set(770*i,770*t,0),n.lookAt(0,0,0),V.push({mesh:n,dirX:i,dirY:t}),_.add(n)}},C=function(){return new THREE.MeshPhongMaterial({color:5408,emissive:131586,specular:12632256,shininess:100})},I=function(){return new THREE.ShaderMaterial(i)},k=function(){var e=new THREE.Mesh(w.geoms.corpus,F),n=new THREE.Mesh(w.geoms.diod,W),i=new THREE.Mesh(new THREE.BoxGeometry(.5,.5,.5),new THREE.MeshBasicMaterial({color:65535}));return i.add(e,n),i},U=function(e){0!=V.length&&("DARK"==e&&(_.rotation.y=x.rotation.y),"FLASH"==e&&(W.uniforms.light.value-=.01,V.forEach(function(e){e.mesh.position.x+=3.5*e.dirX,e.mesh.position.y+=3.5*e.dirY})))},K=function(){return W.uniforms.light.value<0}}();
