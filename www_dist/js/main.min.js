!function(){"use strict";var e=void 0,n={sceneBack:null,waterNormals:null,continents:null},i=function(i){e=new THREE.TextureLoader,new Promise(function(i){n.sceneBack=e.load("assets/background_map.jpg",function(){i()})}).then(function(){return new Promise(function(i){n.waterNormals=e.load("assets/Voda_normali.jpg",function(){n.waterNormals.wrapS=n.waterNormals.wrapT=THREE.RepeatWrapping,n.waterNormals.repeat.set(5,5),i()})})}).then(function(){return new Promise(function(i){n.continents=e.load("assets/contour.jpg",function(){i()})})}).then(function(){e=null,i()})},t=void 0,o=void 0,r=void 0,a=function(){t=new THREE.Scene,t.background=n.sceneBack,o=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,3.5,15e3),o.position.set(-800,0,1800);var e=new THREE.PointLight(16777215,2);e.position.set(1e3,1e3,1e3),t.add(e);var i=new THREE.AmbientLight(16777215,.2);t.add(i),r=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webGL")}),r.setPixelRatio(window.devicePixelRatio),r.setSize(window.innerWidth,window.innerHeight)},l=function e(){x(),r.render(t,o),requestAnimationFrame(e)},d=function(){window.addEventListener("resize",s,!1)},s=function(){r.setSize(window.innerWidth,window.innerHeight),o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix()},u=function(){document.getElementById("webGL").className="show"},c=function(){document.getElementById("preloader").className="hide"},v=function(){window.addEventListener("wheel",m,!1),window.onscroll=function(){m()}},m=function e(){if(!M()){S();document.getElementById("preloader").className="hidden",setTimeout(function(){document.getElementById("slogan").className="show"},500),window.removeEventListener("wheel",e,!1)}},f=void 0,w=void 0,g=void 0,h=void 0,E=function(){f=new THREE.Group,w=p(),g=H(),f.add(g),h=R(),t.add(h),t.add(f)},p=function(){return new THREE.Mesh(new THREE.SphereGeometry(600,40,40),new THREE.MeshPhongMaterial({map:n.waterNormals,normalMap:n.waterNormals,shininess:0,transparent:!0,opacity:.94,color:2042436}))},H=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(N));return e.rotation.z=-.5,e.rotation.x=-.5,e.material.transparent=!0,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e.material.uniforms.tDiffuse.value=n.continents,e},R=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(780,40,40),new THREE.ShaderMaterial(P));return e.material.transparent=!0,e.material.blending=THREE.AdditiveBlending,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e},T=.002,y="left",x=function(){f&&(T>.005&&"left"==y&&(y="right"),T<-.005&&"right"==y&&(y="left"),"left"==y&&(T+=1e-4),"right"==y&&(T-=1e-4),"normal"==y&&(T<.02?(T+=5e-5,g.material.uniforms.light.value<1.35&&(g.material.uniforms.light.value+=.012,h.material.uniforms.light.value+=.0034)):T=.02),f.rotation.y+=T)},S=function(){return y="normal"},M=function(){return"normal"==y||"normal"==y&&void 0};window.onload=function(){i(function(){a(),d(),E(),l(),u(),c(),v()})};var N={uniforms:{tDiffuse:{value:null},light:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","#endif","uniform sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","float point (in vec2 uv, in vec2 center, in float radius) {","float len = length(center - uv);","return float(1. - smoothstep(radius, radius + .6, len));","}","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec2 tileuv = vec2(uv.x, uv.y*0.8) * 180.;","float radius = .03;","vec2 center = floor( tileuv ) + vec2( 0.5, 0.5 );","float point = point( tileuv, center, radius );","vec4 points = vec4( 1.5 * light - 0.2, 1.5 * light - 0.2, 1.8 * light,  (1.01 - diff.y) * point );","vec4 contur = vec4( 1.2*light, 1.2*light, 1.8*light,  diff.x );","vec4 continents = vec4( .1, .1, .2, (1.5 - diff.y) * (1.0 - points.z) * 0.01 );","gl_FragColor = contur + continents + points;","}"].join("\n")},P={uniforms:{viewVector:{value:new THREE.Vector3(-800,0,1800)},light:{value:0},glowColor:{value:new THREE.Vector3(.5,.5,.9)}},vertexShader:["uniform vec3 viewVector;","uniform float light;","varying float intensity;","void main() {","vec3 vNormal = normalize( normalMatrix * normal );","vec3 vNormel = normalize( normalMatrix * viewVector );","intensity = pow( light - dot(vNormal, vNormel), 2.9 );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 glowColor;","varying float intensity;","void main() {","vec3 glow = glowColor * intensity;","gl_FragColor = vec4( glow, 1.0 );","}"].join("\n")}}();
