!function(){"use strict";var e=void 0,n={sceneBack:null,waterNormals:null,continents:null},i=void 0,t={corpus:null,isLoadedCorpus:!1,diod:null,isLoadedDiod:!1},o=function(o){e=new THREE.TextureLoader,i=new THREE.OBJLoader,new Promise(function(i){n.sceneBack=e.load("assets/background_map.jpg",function(){i()})}).then(function(){return new Promise(function(i){n.waterNormals=e.load("assets/Voda_normali.jpg",function(){n.waterNormals.wrapS=n.waterNormals.wrapT=THREE.RepeatWrapping,n.waterNormals.repeat.set(5,5),i()})})}).then(function(){return new Promise(function(i){n.continents=e.load("assets/contour.jpg",function(){i()})})}).then(function(){return new Promise(function(e){i.load("assets/connector.obj",function(n){n.traverse(function(n){n instanceof THREE.Mesh==1&&("diod"==n.name&&(t.diod=n.geometry,t.isLoadedDiod=!0),"iron"==n.name&&(t.corpus=n.geometry,t.isLoadedCorpus=!0),t.isLoadedCorpus&&t.isLoadedDiod&&e())})})})}).then(function(){e=null,i=null,o()})},r=void 0,a=void 0,l=void 0,d=function(){r=new THREE.Scene,r.background=n.sceneBack,a=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,3.5,15e3),a.position.set(-800,0,1800);var e=new THREE.PointLight(16777215,2);e.position.set(1e3,1e3,1e3),r.add(e);var i=new THREE.AmbientLight(16777215,.2);r.add(i),l=new THREE.WebGLRenderer({alpha:!0,canvas:document.getElementById("webGL")}),l.setPixelRatio(window.devicePixelRatio),l.setSize(window.innerWidth,window.innerHeight)},s=function e(){S(),V(),l.render(r,a),requestAnimationFrame(e)},u=function(){window.addEventListener("resize",c,!1)},c=function(){l.setSize(window.innerWidth,window.innerHeight),a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix()},v=function(){document.getElementById("webGL").className="show"},m=function(){document.getElementById("preloader").className="hide"},f=function(){window.addEventListener("wheel",w,!1),window.onscroll=function(){w()}},w=function e(){if(!N()){L();document.getElementById("preloader").className="hidden",setTimeout(function(){document.getElementById("slogan").className="show"},500),window.removeEventListener("wheel",e,!1)}},h=void 0,g=void 0,E=void 0,p=void 0,H=function(){h=new THREE.Group,g=R(),h.add(g),E=T(),h.add(E),p=M(),r.add(p),r.add(h)},R=function(){return new THREE.Mesh(new THREE.SphereGeometry(600,40,40),new THREE.MeshPhongMaterial({map:n.waterNormals,normalMap:n.waterNormals,shininess:0,transparent:!0,opacity:.94,color:2042436}))},T=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(608,40,40),new THREE.ShaderMaterial(_));return e.rotation.z=-.5,e.rotation.x=-.5,e.material.transparent=!0,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e.material.uniforms.tDiffuse.value=n.continents,e},M=function(){var e=new THREE.Mesh(new THREE.SphereGeometry(780,40,40),new THREE.ShaderMaterial(W));return e.material.transparent=!0,e.material.blending=THREE.AdditiveBlending,e.material.side=THREE.DoubleSide,e.material.depthWrite=!1,e.material.needsUpdate=!0,e},y=.002,x="left",S=function(){h&&(y>.005&&"left"==x&&(x="right"),y<-.005&&"right"==x&&(x="left"),"left"==x&&(y+=1e-4),"right"==x&&(y-=1e-4),"normal"==x&&(y<.02?(y+=5e-5,E.material.uniforms.light.value<1.35&&(E.material.uniforms.light.value+=.012,p.material.uniforms.light.value+=.0034)):y=.02),h.rotation.y+=y)},L=function(){return x="normal"},N=function(){return"normal"==x||"normal"==x&&void 0},P=void 0,j=void 0,B=function(){D();for(var e=0;e<12;e++){var n=b();r.add(n),n.rotation.x=-Math.PI/2,n.position.x=300*e-1700}},D=function(){P=new THREE.MeshPhongMaterial({color:5408,emissive:131586,specular:12632256,shininess:100,envMap:n.sceneBack}),j=new THREE.ShaderMaterial(z)},b=function(){var e=C(),n=G(),i=new THREE.Group;return i.add(e),i.add(n),i},C=function(){return new THREE.Mesh(t.corpus,P)},G=function(){return new THREE.Mesh(t.diod,j)},V=function(){E.material.uniforms.light.value<1.35&&"normal"==x&&(j.uniforms.light.value-=.01)};window.onload=function(){o(function(){d(),u(),H(),B(),s(),v(),m(),f()})};var _={uniforms:{tDiffuse:{value:null},light:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#ifdef GL_ES","precision mediump float;","#endif","uniform sampler2D tDiffuse;","uniform float light;","varying vec2 vUv;","float point (in vec2 uv, in vec2 center, in float radius) {","float len = length(center - uv);","return float(1. - smoothstep(radius, radius + .6, len));","}","void main() {","vec2 uv = vUv;","vec4 diff = texture2D(tDiffuse, uv);","vec2 tileuv = vec2(uv.x, uv.y*0.8) * 180.;","float radius = .03;","vec2 center = floor( tileuv ) + vec2( 0.5, 0.5 );","float point = point( tileuv, center, radius );","vec4 points = vec4( 1.5 * light - 0.2, 1.5 * light - 0.2, 1.8 * light,  (1.01 - diff.y) * point );","vec4 contur = vec4( 1.2*light, 1.2*light, 1.8*light,  diff.x );","vec4 continents = vec4( .1, .1, .2, (1.5 - diff.y) * (1.0 - points.z) * 0.01 );","gl_FragColor = contur + continents + points;","}"].join("\n")},W={uniforms:{viewVector:{value:new THREE.Vector3(-800,0,1800)},light:{value:0},glowColor:{value:new THREE.Vector3(.5,.5,.9)}},vertexShader:["uniform vec3 viewVector;","uniform float light;","varying float intensity;","void main() {","vec3 vNormal = normalize( normalMatrix * normal );","vec3 vNormel = normalize( normalMatrix * viewVector );","intensity = pow( light - dot(vNormal, vNormel), 2.9 );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec3 glowColor;","varying float intensity;","void main() {","vec3 glow = glowColor * intensity;","gl_FragColor = vec4( glow, 1.0 );","}"].join("\n")},z={uniforms:{light:{value:1}},vertexShader:["uniform float light;","void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float light;","void main() {","gl_FragColor = vec4( 0.7*light, 0.8*light, 1.0*light, 1.0 );","}"].join("\n")}}();
